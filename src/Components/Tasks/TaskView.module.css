.task-view {
	margin: 0;
	padding: 0 1.5rem 0 1.5rem;
	max-width: 85vw;
	min-height: 22rem;
}

.task-header {
	text-align: start;
	margin: 0 0 0.25rem 0;
	padding: 0.25rem 0 0.25rem 1.5rem;
	background-color: #ededed;
	border: 0.1rem solid lightgray;
	border-radius: 3px;
}

table {
	width: 100%;
	background-color: rgb(221, 218, 218);
	border-radius: 3px;
	table-layout: fixed;
	word-wrap: break-word;
}

th {
	background-color: #ededed;
}

tr {
	border-radius: 3px;
}

td,
th {
	border-spacing: 0 0.05rem;
	padding: 3px 5px;
}

/* th .host {
	max-width: 5%;
}
th .application {
	max-width: 5%;
}
th .status {
	max-width: 5%;
}
th .taskcode {
	max-width: 5%;
}
th .started {
	max-width: 5%;
}
th .completed {
	max-width: 5%;
}
th .subevents {
	max-width: 5%;
}
th .id {
	max-width: 5%;
}
th .message {
	max-width: 5%;
} */

/*
	Max width before this PARTICULAR table gets nasty. This query will take effect for any screen smaller than 760px and also iPads specifically.
	*/
@media only screen and (max-width: 760px),
	(min-device-width: 768px) and (max-device-width: 1024px) {
	/* Force table to not be like tables anymore */
	table,
	thead,
	tbody,
	th,
	td,
	tr {
		display: block;
	}

	/* Hide table headers (but not display: none;, for accessibility) */
	thead tr {
		position: absolute;
		top: -9999px;
		left: -9999px;
	}

	tr {
		margin: 0 0 1rem 0;
		position: relative;
	}

	/* tr:nth-child(odd) {
		background: #ccc;
	} */

	td {
		/* Behave  like a "row" */
		border: none;
		border-bottom: 1px solid #eee;
		position: absolute;
		padding-left: 50%;
	}

	td:before {
		/* Now like a table header */
		position: absolute;
		/* Top/left values mimic padding */
		top: 6px;
		left: 6px;
		width: 45%;
		padding-right: 10px;
		/* white-space: nowrap; */
	}

	/*
		Label the data
    You could also use a data-* attribute and content for this. That way "bloats" the HTML, this way means you need to keep HTML and CSS in sync. Lea Verou has a clever way to handle with text-shadow.
		*/
	.task-view td:nth-of-type(1):before {
		content: 'Host';
	}
	.task-view td:nth-of-type(2):before {
		content: 'Application';
	}
	.task-view td:nth-of-type(3):before {
		content: 'Status';
	}
	.task-view td:nth-of-type(4):before {
		content: 'Task Code';
	}
	.task-view td:nth-of-type(5):before {
		content: 'Started';
	}
	.task-view td:nth-of-type(6):before {
		content: 'Completed';
	}
	.task-view td:nth-of-type(7):before {
		content: 'Sub-Events';
	}
	.task-view td:nth-of-type(8):before {
		content: 'ID';
	}
	.task-view td:nth-of-type(9):before {
		content: 'Message';
	}

	/* Hierarchy Labels */
	.hierarchy-view td:nth-of-type(1):before {
		content: 'Status';
	}
	.hierarchy-view td:nth-of-type(2):before {
		content: 'Sub-Events';
	}
	.hierarchy-view td:nth-of-type(3):before {
		content: 'Started';
	}
	.hierarchy-view td:nth-of-type(4):before {
		content: 'Completed';
	}
	.hierarchy-view td:nth-of-type(5):before {
		content: 'ID';
	}
	.hierarchy-view td:nth-of-type(6):before {
		content: 'Message';
	}

	/* Sub-Event Labels */
	.sub-event-view td:nth-of-type(1):before {
		content: 'Status';
	}
	.sub-event-view td:nth-of-type(2):before {
		content: 'Sub-Events';
	}
	.sub-event-view td:nth-of-type(3):before {
		content: 'Started';
	}
	.sub-event-view td:nth-of-type(4):before {
		content: 'Completed';
	}
	.sub-event-view td:nth-of-type(5):before {
		content: 'ID';
	}
	.sub-event-view td:nth-of-type(6):before {
		content: 'Message';
	}
}
